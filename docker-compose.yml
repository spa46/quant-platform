version: '3.8'

services:
  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  backend:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      redis:
        condition: service_healthy

  celery_worker:
    build: ./backend
    command: celery -A quant worker --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "scripts/check_celery_worker.py"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery_beat:
    build: ./backend
    command: celery -A quant beat --loglevel=info --pidfile=var/celery/celerybeat.pid --schedule=var/celery/celerybeat-schedule
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "scripts/check_celery_beat.py"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data: 